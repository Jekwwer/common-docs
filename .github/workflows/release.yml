# .github/workflows/release.yml: Creates a release package for the repository.
---
name: release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: create-and-publish-release
    runs-on: ubuntu-latest

    steps:
      - name: checkout-code
        uses: actions/checkout@v4.2.2

      - name: setup-node
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20.x'

      - name: cache-node-modules
        uses: actions/cache@v4.2.0
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install-dependencies
        run: npm ci

      - name: set-environment-variables
        run: |
          REPO_NAME_CLEAN="${GITHUB_REPOSITORY//\//-}"
          REPO_NAME_CLEAN_LOWER=$(echo "$REPO_NAME_CLEAN" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME_CLEAN=$REPO_NAME_CLEAN_LOWER" >> $GITHUB_ENV
        shell: bash

      - name: prepare-release-package
        run: |
          mkdir -p release

          # Copy deploy.sh
          cp deploy.sh release/

          # Copy all .md files except README.md, including from .github/
          find . \
            -type f \
            -name "*.md" \
            ! -name "README.md" \
            -exec cp --parents {} release/ \;

          # Copy config.yml
          cp config.yml release/

          # Copy LICENSE.template
          cp LICENSE.template release/

          # Copy specific .yml files from .github
          mkdir -p release/.github/ISSUE_TEMPLATE
          cp .github/ISSUE_TEMPLATE/config.yml release/.github/ISSUE_TEMPLATE/
          cp .github/FUNDING.yml release/.github/

          # Remove any unintended subfolders named 'release' inside the release folder
          cd release
          find release -type d -name "release" -exec rm -rf {} +

          # Create the ZIP file
          zip -r ${REPO_NAME_CLEAN}-${{ github.ref_name }}.zip .

      - name: publish-custom-package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
